#include <stdio.h>
#include <string.h>

#define BLOCK_SIZE 8
void ecbEncrypt(const char *plaintext, const char *key, char *ciphertext, int size) {
    for (int i = 0; i < size; i += BLOCK_SIZE) {
        for (int j = 0; j < BLOCK_SIZE; j++) {
            ciphertext[i + j] = plaintext[i + j] ^ key[j];
        }
    }
}
void ecbDecrypt(const char *ciphertext, const char *key, char *plaintext, int size) {
    ecbEncrypt(ciphertext, key, plaintext, size); // Decryption is the same as encryption
}

int main() {
    const char *plaintext = "HELLO123HELLO123"; // Multiple of BLOCK_SIZE
    const char *key = "SECRETKEY";
    int size = strlen(plaintext);

    char ciphertext[size];
    char decrypted[size];

    ecbEncrypt(plaintext, key, ciphertext, size);
    printf("Original Plaintext: %s\n", plaintext);
    printf("Ciphertext: %s\n", ciphertext);
    ciphertext[8] ^= 0x01; // Flip one bit to simulate an error in a block

    ecbDecrypt(ciphertext, key, decrypted, size);
    printf("Decrypted (with error): %s\n", decrypted);

    return 0;
}
